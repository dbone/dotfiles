#!/usr/bin/zsh
# If you come from bash you might have to change your $PATH.
PATHS=(${(s/:/)PATH})

if type brew &>/dev/null; then
  HOMEBREW_PREFIX="$(brew --prefix)"
  export FPATH="${HOMEBREW_PREFIX}/share/zsh/site-functions:${FPATH}"
  eval "$(brew shellenv)"
fi

if type ghostty &>/dev/null; then
  export TERMINAL="ghostty"
fi

if [[ "$(uname)" == "Darwin" ]]; then
  PATHS=("/opt/homebrew/bin:/opt/homebrew/sbin" $PATHS[@])
  PATHS=("/opt/homebrew/opt/m4/bin" $PATHS[@])
  PATHS=("/opt/homebrew/opt/openjdk/bin" $PATHS[@])
  PATHS=("/opt/homebrew/opt/bc/bin" $PATHS[@])
  PATHS=("/opt/homebrew/opt/llvm/bin" $PATHS[@])
  alias mvim='/Applications/MacVim.app/Contents/bin/mvim'
elif command -v apt > /dev/null; then
  PATHS+="/snap/bin"
fi

PATHS=("$HOME/.bin" $PATHS[@])
PATHS=("$HOME/.local/pipx/shared/bin" $PATHS[@])
PATHS=("$HOME/.local/bin" $PATHS[@])
PATHS=("$HOME/bin/idea-IU-231.9225.16/bin" $PATHS[@])

if [ -e $HOME/.atuin ]; then
  PATHS=("$HOME/.atuin/bin" $PATHS[@])
fi

if [ -e /opt/neovim ]; then
  PATHS=("/opt/neovim/bin" $PATHS[@])
  export EDITOR=nvim
fi

if [ -e $HOME/node_modules/.bin ]; then
  PATHS=("$HOME/node_modules/.bin" $PATHS[@])
fi

UNIQPATHS=(${(u)PATHS[@]})
PATH=${(j.:.)UNIQPATHS}
export PATH

export _OLD_VIRTUAL_PATH=$PATH

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
#ZSH_THEME="gentoo"
#ZSH_THEME="rkj-repos"
#ZSH_THEME="afowler"
#ZSH_THEME="alanpeabody"
ZSH_THEME="dbone"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=7

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# History settings
export HISTSIZE=1000000000
export SAVEHIST=$HISTSIZE
setopt EXTENDED_HISTORY

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    eza
    git
    colored-man-pages
    colorize
    cp
    ssh-agent
    gpg-agent
    fzf
    tmux
    gradle
    themes
    aws
    gradle
    isodate
    npm
    nvm
    )

zstyle ':omz:plugins:eza' 'dirs-first' yes
zstyle ':omz:plugins:eza' 'git-status' yes
zstyle ':omz:plugins:eza' 'show-group' yes
zstyle ':omz:plugins:eza' 'icons' no

if [[ "$(uname)" == "Darwin" ]]; then
  export HOMEBREW_AUTO_UPDATE_SECS=3600
  export HOMEBREW_NO_ENV_HINTS=1
  plugins+=(macos xcode brew gnu-utils iterm2)
elif command -v apt > /dev/null; then
  plugins+=(debian fbterm)
fi

if [[ "$TERM" == "xterm-ghostty" ]]; then
  export TERM="xterm-256color"
fi

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

if [ -e ~/.aliases.sh ]; then
	source ${HOME}/.aliases.sh
fi

if [ -e ~/.aliases.ytdl.sh ]; then
	source ${HOME}/.aliases.ytdl.sh
fi

load_ssh_keys () {
    if [ -e ~/.ssh/id_ed25519 ]; then
    ssh-add ~/.ssh/id_ed25519
    fi

    if [ -e ~/.ssh/dbone_id_ed25519 ]; then
    ssh-add ~/.ssh/dbone_id_ed25519
    fi

    if [ -e ~/.ssh/duane_bone_gmail_com_id_ed25519 ]; then
    ssh-add ~/.ssh/duane_bone_gmail_com_id_ed25519
    fi

    if [ -e ~/.ssh/gnome_gitlab_ed25519 ]; then
    ssh-add ~/.ssh/gnome_gitlab_ed25519
    fi

    if [ -e ~/.ssh/snhubone_github_id_ed25519 ]; then
    ssh-add ~/.ssh/snhubone_github_id_ed25519
    fi
}

if [[ -e "$HOME/.venv" ]]; then
    export VIRTUAL_ENV_DISABLE_PROMPT=1
    source "$HOME/.venv/bin/activate"
fi

if [ -e ~/.atuin.zsh ]; then
    source ~/.atuin.zsh
fi

if [ -e ~/.zshlocal ]; then
  source ~/.zshlocal
fi

if command -v starship > /dev/null; then
    SPACESHIP_HOST_SHOW="always"
    SPACESHIP_HOST_SHOW_FULL=false
    export SPACESHIP_HOST_SHOW SPACESHIP_HOST_SHOW_FULL
    alias launch_starship='eval "$(starship init zsh)"'
fi

function _umask_hook {
  if [[ -n $UMASK ]]; then
    umask "$UMASK"
  elif [[ $OSTYPE == darwin* ]]; then
    umask 0077
  else
    umask 0022
  fi
}

# Trigger the hook when the working directory changes
add-zsh-hook chpwd _umask_hook

# Ensure the hook runs on shell startup
add-zsh-hook precmd _umask_hook

#if command -v jenv > /dev/null; then
#  export PATH="$HOME/.jenv/bin:$PATH"
#  eval "$(jenv init -)"
#fi

#eval "$(perl -I$HOME/perl5/lib/perl5 -Mlocal::lib=$HOME/perl5)"
